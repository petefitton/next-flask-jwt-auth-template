"""
This type stub file was generated by pyright.
"""

import collections.abc as c
import inspect
import typing as t
from weakref import WeakMethod, ref

T = t.TypeVar("T")
class Symbol:
    """A constant symbol, nicer than ``object()``. Repeated calls return the
    same instance.

    >>> Symbol('foo') is Symbol('foo')
    True
    >>> Symbol('foo')
    foo
    """
    symbols: t.ClassVar[dict[str, Symbol]] = ...
    def __new__(cls, name: str) -> Symbol:
        ...
    
    def __init__(self, name: str) -> None:
        ...
    
    def __repr__(self) -> str:
        ...
    
    def __getnewargs__(self) -> tuple[t.Any, ...]:
        ...
    


def make_id(obj: object) -> c.Hashable:
    """Get a stable identifier for a receiver or sender, to be used as a dict
    key or in a set.
    """
    ...

def make_ref(obj: T, callback: c.Callable[[ref[T]], None] | None = ...) -> ref[T]:
    ...

